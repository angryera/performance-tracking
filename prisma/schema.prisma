// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  password  String
  role      UserRole @default(REP)
  minutes   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  conversations Conversation[]
  performance   Performance[]

  @@map("users")
}

model Conversation {
  id              String   @id @default(cuid())
  userId          String
  transcript      String
  mergedTranscript String? // JSON string containing structured conversation with speaker identification
  duration        Int      // in seconds
  grade           String?  // A, B, C, D, F
  summary         String?
  deleted         Boolean  @default(false) // Soft delete flag
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("conversations")
}

model Performance {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime
  totalCalls Int
  avgGrade  String
  totalMinutes Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("performances")
}

model GoogleSheetConfig {
  id                String   @id @default(cuid())
  spreadsheetId     String
  range             String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("google_sheet_configs")
}

model GlobalSettings {
  id            String   @id @default(cuid())
  grantedMinutes Int     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("global_settings")
}

enum UserRole {
  ADMIN
  REP
} 